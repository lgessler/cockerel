datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
model User {
  id                  Int          @id @default(autoincrement())
  email               String       @unique
  name                String?
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  Ingredient          Ingredient[]
  Recipe              Recipe[]
  Tasting             Tasting[]
}

// A single ingredient
model Ingredient {
  id          Int                  @id @default(autoincrement())
  author      User                 @relation(fields: [authorId], references: [id])
  authorId    Int
  name        String               @unique
  url         String?
  description String?
  categories  IngredientCategory[]
  recipes     Recipe[]
}

model IngredientCategory {
  id          Int          @id @default(autoincrement())
  name        String
  ingredients Ingredient[]
}

// A recipe for preparing a drink
model Recipe {
  id               Int              @id @default(autoincrement())
  author           User             @relation(fields: [authorId], references: [id])
  authorId         Int
  name             String
  shortDescription String?
  description      String?
  steps            String?
  ingredients      Ingredient[]
  Tasting          Tasting[]
  categories       RecipeCategory[]
}

model RecipeCategory {
  id      Int      @id @default(autoincrement())
  name    String
  recipes Recipe[]
}

// Someone who prepares a drink, or an establishment
model Mixer {
  id      Int       @id @default(autoincrement())
  name    String
  url     String?
  Tasting Tasting[]
}

// An individual event where a recipe was created by a mixer and consumed by an author
model Tasting {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  mixer     Mixer    @relation(fields: [mixerId], references: [id])
  mixerId   Int
  decistars Int // e.g. 30 => 3.0 stars
  comments  String?
}
